plugins {
    id 'nu.studer.jooq' version '2.0.9'
}

group 'com.github.projectrake'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'nu.studer.jooq'
apply plugin: 'maven'

sourceCompatibility = 1.9
targetCompatibility = 1.9

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile fileTree(dir: '../libs', include: '*.jar')
    compile "io.dropwizard.metrics:metrics-core:3.2.+"

    compile 'org.hibernate:hibernate-core:5.2.12.Final'
    compile "org.hibernate:hibernate-hikaricp:5.2.12.Final"
    compile "org.hibernate:hibernate-ehcache:5.2.12.Final"
    compile 'org.hibernate:hibernate-validator:6.0.7.Final'
    compile 'org.glassfish:javax.el:3.0.1-b08'
    compile "org.hibernate:hibernate-entitymanager:5.2.12.Final"
    compile group: 'org.javassist', name: 'javassist', version: '3.+'

    compile group: 'org.postgresql', name: 'postgresql', version: '42.+'
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.+'
    compile 'mysql:mysql-connector-java:5.1.+'
}

//jooq {
//    version = '3.10.1' // the default (can be omitted)
//    edition = 'OSS'    // the default (can be omitted), other allowed values are PRO, PRO_JAVA_6, and TRIAL
//
//    rakedev(sourceSets.main) {
//        jdbc {
//            driver = 'org.mariadb.jdbc.Driver'
//            url = 'jdbc:mysql://localhost/rakedev'
//            user = 'rakedev'
//            password = 'rakedev'
//            properties {
//                property {
//                    key = 'ssl'
//                    value = 'true'
//                }
//            }
//        }
//        generator {
//            name = 'org.jooq.util.DefaultGenerator'
//            strategy {
//                name = 'org.jooq.util.DefaultGeneratorStrategy'
//            }
//            database {
//                name = 'org.jooq.util.mariadb.MariaDBDatabase'
//                inputSchema = 'rakedev_template'
//                //outputSchema = 'rakedev'
//                includes = '.*gm_.*'
//                excludes = ''
//
//                /*
//                customTypes {
//                    customType {
//                        name = 'UUID'
//                        converter = 'com.github.projectrake.dbm.util.typebindings.ByteArrayUUIDConverter'
//                    }
//                }
//                */
//
//                forcedTypes {
//                    forcedType {
//                        name = 'UUID'
//                        expression = '((.*_uuid)|uuid)'
//                        types = '.*'
//                        converter = 'com.github.projectrake.dbm.util.typebindings.ByteArrayUUIDConverter'
//                    }
//
//                    forcedType {
//                        name = 'BOOLEAN'
//                        expression = '((.*_bool)|bool|(.*_boolean)|boolean)'
//                        types = '.*'
//                        converter = 'com.github.projectrake.dbm.util.typebindings.BooleanIntegerConverter'
//                    }
//                }
//            }
//            generate {
//                relations = true
//                deprecated = false
//                records = true
//                immutablePojos = true
//                fluentSetters = true
//                pojosEqualsAndHashCode = true
//                pojosToString = true
//
//            }
//            target {
//                packageName = project.group + "." + project.name + ".jooq"
//
//            }
//        }
//    }
//}
//
//tasks.generateRakedevJooqSchemaSource.with {
//    def out = new ByteArrayOutputStream()
//    javaExecSpec = { JavaExecSpec s ->
//        s.standardOutput = out
//        s.errorOutput = out
//        s.ignoreExitValue = true
//        s.jvmArgs = ['-XX:+IgnoreUnrecognizedVMOptions', '--add-modules', 'java.se.ee']
//    }
//
//    execResultHandler = { ExecResult r ->
//        if (r.exitValue != 0) {
//            throw new RuntimeException('jOOQ source code generation failed:\n\n' + out.toString())
//        }
//    }
//}
//
//task removeJOOQGen(type: Delete) {
//    delete "$buildDir/generated-src/jooq"
//    followSymlinks = true
//}
//
//generateRakedevJooqSchemaSource.dependsOn(removeJOOQGen)
//compileJava.dependsOn(generateRakedevJooqSchemaSource)

task copyToLib(type: Copy) {
    into "$buildDir/libs"
    from configurations.runtime.filter { !it.getName().contains("spigot") }
}

jar {
    def classdeps = configurations.compile.collect { it.getName() } + configurations.compile.collect {
        "libs/" + it.getName()
    } + configurations.compile.collect { "../libs/" + it.getName() }

    manifest {
        attributes("Class-Path": classdeps.join(' '))
    }
}

jar.dependsOn(copyToLib)